{"version":3,"sources":["api/apiHandler.js","components/Auth/UserContext.jsx","components/Auth/UserProvider.jsx","components/Auth/withUser.jsx","components/NavMain.jsx","components/Forms/FormSignin.jsx","pages/Home.jsx","pages/Signin.jsx","utils.js","components/Forms/FormSignup.jsx","pages/Signup.jsx","components/Forms/FormCreatePlant.jsx","pages/Myplants.jsx","pages/Greenclinic.jsx","components/ProtectedRoute.jsx","components/Comments.jsx","components/Forms/FormComment.jsx","pages/Profile.jsx","components/Forms/FormCreateWall.jsx","components/UploadWidget.jsx","pages/Users.jsx","pages/Wall.jsx","pages/Exchangemap.jsx","components/Forms/FormEditPlant.jsx","components/Forms/FormEditWall.jsx","pages/DbFormPlant.jsx","pages/OneUser.jsx","pages/UserPage.jsx","App.jsx","index.js"],"names":["service","axios","create","baseURL","process","withCredentials","errorHandler","error","response","data","console","log","signup","userInfo","post","then","res","catch","signin","isLoggedIn","get","logout","getUsers","searchUsers","str","this","params","search","getPlants","createPlant","plantInfo","createDbPlant","deleteItem","itemId","delete","editItem","itemInfo","patch","editWall","getWall","createWall","wallInfo","postId","UserContext","React","createContext","UserProvider","state","user","isLoading","setUser","setState","removeUser","apiHandler","authValues","Provider","value","props","children","Component","withUser","ComponentToPassUserContextTo","Consumer","context","className","exact","to","Fragment","firstName","onClick","FormSignin","email","password","handleChange","event","key","target","name","handleSubmit","preventDefault","history","push","onChange","onSubmit","htmlFor","type","id","contextType","withRouter","Signin","buildFormData","formData","parentKey","Date","File","append","Object","keys","forEach","FormSignup","image","lastName","files","fd","FormData","httpResponse","class","Signup","FormCreatePlant","description","enlightment","watering","wateringinterval","growingperiod","isWatered","waterDate","addItem","status","message","timeoutId","setTimeout","for","plants","date","showForm","plant","filter","it","_id","today","dd","getDate","mm","getMonth","yyyy","getFullYear","apiResp","userPlants","id_user","renderForm","map","src","Greenclinic","component","rest","render","Comments","comments","displayUserPostButtons","comm","userEmail","deleteComment","getComment","commentsPost","id_wall","comment","text","created_at","slice","FormComment","commentData","addComment","addCommentUpdate","userpic","placeholder","posts","deleteWall","postId_id","commentId","apiRes","userPost","title","subtitle","profileImg","userCommenting","FormCreateWall","forwardRef","ref","file","tempURL","URL","createObjectURL","onFileSelect","author","picture","Users","users","foundUsers","sortValue","inputValue","userFilterOnChange","submitSearch","filteredUser","toLowerCase","includes","wall","sortByKey","currentUser","displayUserPost","array","sort","a","b","x","y","Exchangemap","require","config","FormEditPlant","formRef","createRef","handleFileSelect","tmpUrl","plantToEdit","match","err","defaultValue","FormEditWall","postToEdit","waterdays","mintemp","maxtemp","userplant","userPosts","UserPage","App","path","Wall","Myplants","Profile","Map","DbFormPlant","OneUser","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6d19db87.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true, // Cookie is sent to client when using this service. (used for session)\n});\n\nfunction errorHandler(error) {\n  if (error.response.data) {\n    console.log(error.response && error.response.data);\n    throw error;\n  }\n  throw error;\n}\n\nexport default {\n  service,\n\n  signup(userInfo) {\n    return service\n      .post(\"/api/auth/signup\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  signin(userInfo) {\n    return service\n      .post(\"/api/auth/signin\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  isLoggedIn() {\n    return service\n      .get(\"/api/auth/isLoggedIn\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  logout() {\n    return service\n      .get(\"/api/auth/logout\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getUsers() {\n    return service\n      .get(\"/api/user\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n\n\n  searchUsers(str) {\n    return this.service.get(\"/api/user/search/api\", {\n      params: {\n        search: str\n      }\n    })\n  },\n\n  getPlants() {\n    return service\n      .get(\"/api/plants\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  createPlant(plantInfo) {\n    return service\n      .post(\"/api/plants\", plantInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  createDbPlant(plantInfo) {\n    return service\n      .post(\"/api/dbplants\", plantInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  deleteItem(itemId) {\n    return service\n      .delete(\"/api/plants/\" + itemId)\n      .then(() => {\n        console.log(\"successfully deleted\");\n      })\n      .catch(errorHandler);\n  },\n\n  editItem(itemId, itemInfo) {\n    return service\n      .patch(\"/api/plants/\" + itemId, itemInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  editWall(itemId, itemInfo) {\n    return service\n      .patch(\"/api/wall/\" + itemId, itemInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getWall() {\n    return service\n      .get(\"/api/wall\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  createWall(wallInfo) {\n    return service\n      .post(\"/api/wall\", wallInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  editWall(itemId, itemInfo) {\n    return service\n      .patch(\"/api/wall/\" + itemId, itemInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n\n  },\n\n\n  deleteWall(itemId) {\n    return service\n      .delete(\"/api/wall/\" + itemId)\n      .then(() => {\n        console.log(\"successfully deleted\");\n      })\n      .catch(errorHandler);\n  },\n\n\n  getComment() {\n    return service\n      .get(\"/api/comment\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n\n  addComment(postId) {\n    return service\n      .post(\"/api/comment\", postId)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  deleteComment(itemId) {\n    return service\n      .delete(\"/api/comment/\" + itemId)\n      .then(() => {\n        console.log(\"successfully deleted\");\n      })\n      .catch(errorHandler);\n  },\n};\n","import React from \"react\";\n\nexport const UserContext = React.createContext();\n","import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { UserContext } from \"./UserContext\";\n\nclass UserProvider extends Component {\n  state = {\n    user: null,\n    isLoggedIn: false,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    apiHandler\n      .isLoggedIn()\n      .then((data) => {\n        this.setState({ user: data, isLoggedIn: true, isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({ user: null, isLoggedIn: false, isLoading: false });\n      });\n  }\n\n  setUser = (user) => {\n    this.setState({ user, isLoggedIn: true });\n  };\n\n  removeUser = () => {\n    this.setState({ user: null, isLoggedIn: false });\n  };\n\n  render() {\n    //  Setup all the values/functions you want to expose to anybody reading\n    // from the AuthContext.\n    const authValues = {\n      user: this.state.user,\n      setUser: this.setUser,\n      removeUser: this.removeUser,\n      isLoggedIn: this.state.isLoggedIn,\n      isLoading: this.state.isLoading,\n    };\n\n    return (\n      <UserContext.Provider value={authValues}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default UserProvider;\n","import React from \"react\";\nimport { UserContext } from \"./UserContext\";\n\n// This is what we call a HOC (Higher Order Component).\n// It takes a component as a parameter and it returns a component.\n// This technique can be used to abstract some logic in order to pass\n// some data down as props to the component sent as parameter.\n\n// The use case of this one is to make it easy to access the user context to\n// any component in our app.\n\n/* ******************************************************** */\n\n//  How to use:  =>\n// YourComponent.jsx\n// import React from \"react\"\n// function or class YourComponent()\n//\n// ... your implementation.\n//\n// export default withUser(YourComponent)\n// ----------------^ your component now has access to the user context defined in UserProvider.jsx.\n\n// This component is not exported as default, so you have to import it\n// this way :\n// import { withUser } from \"../relative/path/to/this/file\"\n\nexport const withUser = (ComponentToPassUserContextTo) => {\n  return function (props) {\n    return (\n      <UserContext.Consumer>\n        {(context) => (\n          <ComponentToPassUserContextTo {...props} context={context} />\n        )}\n      </UserContext.Consumer>\n    );\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { withUser } from \"../components/Auth/withUser\";\nimport apiHandler from \"../api/apiHandler\";\n\nimport \"../styles/NavMain.css\";\n\nconst NavMain = (props) => {\n  const { context } = props;\n\n  function handleLogout() {\n    apiHandler\n      .logout()\n      .then(() => {\n        context.removeUser();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  return (\n    <nav className=\"NavMain\">\n      <NavLink exact to=\"/\">\n        <h3 className=\"logoApp\">InstaGreen</h3>\n      </NavLink>\n      <ul className=\"nav-list\">\n        {context.isLoggedIn && (\n          <React.Fragment>\n            <li>\n              <NavLink to=\"/myplants\">My Plants</NavLink>\n            </li>\n      \n            <li>\n              <NavLink to=\"/wall\">Wall</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/users\">Users</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/map\">Map</NavLink>\n            </li>\n          \n            <li>\n              <NavLink to=\"/profile\">\n                \n                {context.user && context.user.firstName}\n                \n              </NavLink>\n            </li>\n            <li>\n              <p onClick={handleLogout}>Logout</p>\n            </li>\n          </React.Fragment>\n        )}\n        {!context.isLoggedIn && (\n          <React.Fragment>\n        \n            \n            <li>\n              <NavLink to=\"/signup\">Create account</NavLink>\n            </li>\n          </React.Fragment>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default withUser(NavMain);\n","import React, { Component } from \"react\";\nimport { UserContext } from \"../Auth/UserContext\";\nimport { withRouter } from \"react-router-dom\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { Redirect  } from 'react-router-dom';\n\nclass FormSignin extends Component {\n  static contextType = UserContext;\n\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (event) => {\n    const key = event.target.name;\n    const value = event.target.value;\n\n    this.setState({ [key]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    apiHandler\n      .signin(this.state)\n      .then((data) => {\n        this.context.setUser(data);\n        this.props.history.push(\"/wall\");\n      })\n      .catch((error) => {\n        console.log(error);\n        // Display error message here, if you set the state\n      });\n  };\n\n  render() {\n    if (this.context.user) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"signinParent\">\n\n      <form onChange={this.handleChange} onSubmit={this.handleSubmit} className=\"signinform\">\n\n        <label className=\"signinform_label\" htmlFor=\"email\">email</label>\n        <input type=\"email\" id=\"email\" name=\"email\" className=\"signinform_input\"/>\n\n        <label className=\"signinform_label\" htmlFor=\"password\">password</label>\n        <input type=\"password\" id=\"password\" name=\"password\" className=\"signinform_input\" />\n\n        <button className=\"signinform_button\">Log In</button>\n\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FormSignin);\n","import React from \"react\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"homepage\">\n          <h1 className=\"hometitle\">Welcome to Instagreen</h1>\n          <h2 className=\"homesubtitle\"> Your plant care starts here...</h2>\n        </div>\n\n        <section className=\"homeinfos\">\n          <article className=\"homecontainer\">\n            <h3> Share </h3>\n            <p className=\"containertext\">\n              Add your plants and share them with your friends !\n            </p>\n          </article>\n          <article className=\"homecontainer\">\n            <h3> Care </h3>\n            <p className=\"containertext\">\n              Know how to treat your plants and get helped by the community\n            </p>\n          </article>\n          <article className=\"homecontainer\">\n            <h3> Exchange </h3>\n            <p className=\"containertext\">\n              Exchange your plants or offer cuttings to anyone !\n            </p>\n          </article>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport FormSignin from \"../components/Forms/FormSignin\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Signin = (props) => {\n  return (\n    <div className=\"signincontainer\">\n\n    <div className=\"signin\">\n\n      <div className=\"signin_left\">\n        <h1 className=\"signin_left_title\"> InstaGreen</h1>\n        <h2 className=\"signin_left_subtitle\">Your plant care starts here...</h2>\n        <section className=\"homeinfos\">\n          <article className=\"homecontainer\">\n            <h3> Share </h3>\n            <p className=\"containertext\">\n              Add your plants and share them with your friends !\n            </p>\n          </article>\n          <article className=\"homecontainer\">\n            <h3> Care </h3>\n            <p className=\"containertext\">\n              Know how to treat your plants and get helped by the community\n            </p>\n          </article>\n          <article className=\"homecontainer\">\n            <h3> Exchange </h3>\n            <p className=\"containertext\">\n              Exchange your plants or offer cuttings to anyone !\n            </p>\n          </article>\n        </section>\n      \n      </div>\n\n      <div className=\"signin_right\">\n        <FormSignin />\n        <p className=\"signin_right_text\"> No account yet ? \n        <NavLink to=\"/signup\">Sign up here !</NavLink></p>\n      </div>\n\n    </div>\n\n    </div>\n  );\n};\n\nexport default Signin;\n\n\n","export function buildFormData(formData, data, parentKey) {\n  if (\n    data &&\n    typeof data === \"object\" &&\n    !(data instanceof Date) &&\n    !(data instanceof File)\n  ) {\n    Object.keys(data).forEach((key) => {\n      buildFormData(\n        formData,\n        data[key],\n        parentKey ? `${parentKey}[${key}]` : key\n      );\n    });\n  } else {\n    const value = data == null ? \"\" : data;\n    formData.append(parentKey, value);\n  }\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { UserContext } from \"../Auth/UserContext\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { Redirect } from \"react-router-dom\";\nimport { buildFormData } from \"../../utils\";\n\nclass FormSignup extends Component {\n  static contextType = UserContext;\n\n  state = {\n    email: \"\",\n    image: null,\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  };\n\n  handleChange = (event) => {\n    const value =\n    event.target.type === \"file\" ? event.target.files[0] : event.target.value;\n    \n    const key = event.target.name;\n\n    this.setState({ [key]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n\n    const fd = new FormData();\n    const { httpResponse, ...data } = this.state;\n    buildFormData(fd, data);\n\n\n\n    apiHandler\n      .signup(fd)\n      .then((data) => {\n        this.context.setUser(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    if (this.context.user) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div class=\"formcontainersignup\">\n      <form onSubmit={this.handleSubmit} className=\"signupform\">\n        <label htmlFor=\"firstName\">First Name</label>\n        <input className=\"signupinput\"\n          onChange={this.handleChange}\n          value={this.state.firstName}\n          type=\"text\"\n          id=\"firstName\"\n          name=\"firstName\"\n        />\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input className=\"signupinput\"\n          onChange={this.handleChange}\n          value={this.state.lastName}\n          type=\"text\"\n          id=\"lastName\"\n          name=\"lastName\"\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input className=\"signupinput\"\n          onChange={this.handleChange}\n          value={this.state.email}\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input className=\"signupinput\"\n          onChange={this.handleChange}\n          value={this.state.password}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n        />\n <div>\n            <input\n              type=\"file\"\n              name=\"profileImg\"\n              onChange={this.handleChange}\n              value={this.props.image}\n            ></input>\n          </div>\n        \n        <button> Register </button>\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FormSignup);\n","import React from \"react\";\nimport FormSignup from \"../components/Forms/FormSignup\";\n\nconst Signup = (props) => {\n  return <FormSignup />;\n};\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { withRouter } from \"react-router-dom\";\nimport { buildFormData } from \"../../utils\";\n\nclass FormCreatePlant extends Component {\n  state = {\n    name: \"\",\n    description: \"\",\n    image: null,\n    enlightment: \"\",\n    watering: \"\",\n    wateringinterval: \"\",\n    growingperiod: \"\",\n    isWatered: true,\n    waterDate: \"\",\n    httpResponse: null,\n    error: null,\n  };\n\n  handleChange = (event) => {\n    const key = event.target.name;\n    const value =\n      event.target.type === \"file\" ? event.target.files[0] : event.target.value;\n\n    console.log(key, value);\n    this.setState({ [key]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const fd = new FormData();\n    const { httpResponse, ...data } = this.state;\n    buildFormData(fd, data);\n\n    apiHandler\n      .createPlant(fd)\n      .then((data) => {\n        this.props.addItem(data);\n        this.setState({\n          name: \"\",\n          description: \"\",\n          enlightment: \"\",\n          watering: \"\",\n          wateringinterval: 0,\n          growingperiod: \"\",\n          image: null,\n          httpResponse: {\n            status: \"success\",\n            message: \"Item successfully added.\",\n          },\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 1000);\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message: \"An error occured, try again later.\",\n          },\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 1000);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"PlantFormContainer\">\n        <form className=\"PlantForm\" onSubmit={this.handleSubmit}>\n         \n          <div className=\"form-group\">\n            <label className=\"labelplant\" htmlFor=\"name\">\n              Name\n            </label>\n            <input\n              id=\"name\"\n              name=\"name\"\n              className=\"inputplant\"\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"labelplant\" htmlFor=\"enlightment\">\n              Enlightment\n            </label>\n            <select className=\"selectplant\"\n              name=\"enlightment\"\n              onChange={this.handleChange}\n              value={this.state.enlightment}\n            >\n              <option value=\"\">Choose an option</option>\n              <option value=\"Direct sun\">Direct sun</option>\n              <option value=\"Bright light\">Bright light</option>\n              <option value=\"Filtered light\">Filtered light</option>\n              <option value=\"Shade\">Shade</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"labelplant\" htmlFor=\"watering\">\n              Watering level\n            </label>\n            <select className=\"selectplant\"\n              name=\"watering\"\n              onChange={this.handleChange}\n              value={this.state.watering}\n            >\n              <option value=\"\">Choose an option</option>\n              <option value=\"Heavy\">Heavy</option>\n              <option value=\"Medium\">Medium</option>\n              <option value=\"Low\">Low</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"labelplant\" htmlFor=\"wateringinterval\">\n              Water interval\n            </label>\n            <input\n            className=\"inputplant\"\n              id=\"wateringinterval\"\n              name=\"wateringinterval\"\n              type=\"number\"\n              onChange={this.handleChange}\n              value={this.state.wateringinterval}\n            />\n          </div>\n\n          <div>\n            <input\n            id=\"file\"\n            className=\"inputfile\"\n              type=\"file\"\n              name=\"image\"\n              onChange={this.handleChange}\n              value={this.props.image}\n            ></input>\n            <label for=\"file\">Choose a file</label>\n          </div>\n\n          <button className=\"btn-submit-plant\">Add Plant</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FormCreatePlant);\n","import React, { Component } from \"react\";\nimport FormCreatePlant from \"../components/Forms/FormCreatePlant\";\nimport apiHandler from \"../api/apiHandler\";\nimport { Link } from \"react-router-dom\";\nimport { withUser } from \"../components/Auth/withUser\";\n\nclass Myplants extends Component {\n  //STATE INITIAL REMPLACE PAR COMPONENT DID MOUNT\n  state = {\n    plants: [],\n    date: \"\",\n    showForm: false,\n  };\n\n  showForm = () => {\n    if (this.state.showForm === false) {\n      this.setState({ showForm: true });\n    } else {\n      this.setState({ showForm: false });\n    }\n  };\n\n  renderForm() {\n    return <FormCreatePlant addItem={this.addItem} />;\n  }\n\n  //AFFICHER PLANTES SUR LA PAGE DEPUIS LA DB\n  componentDidMount() {\n    apiHandler\n      .getPlants()\n      .then((apiResp) => {\n        console.log(apiResp);\n        const userPlants = apiResp.filter(\n          (plant) => plant.id_user === this.props.context.user._id\n        );\n        this.setState({\n          plants: userPlants,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  addItem = (plant) => {\n    this.setState({ plants: [...this.state.plants, plant], showForm: false });\n  };\n\n  deleteItem = (itemId) => {\n    apiHandler.deleteItem(itemId).then(() => {\n      this.setState({\n        plants: this.state.plants.filter((it) => it._id !== itemId),\n      });\n    });\n  };\n\n  waterDate = (itemId) => {\n    var today = new Date();\n    var dd = today.getDate();\n\n    var mm = today.getMonth() + 1;\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n    today = mm + \"-\" + dd + \"-\" + yyyy;\n    console.log(today);\n    today = mm + \"/\" + dd + \"/\" + yyyy;\n    console.log(today);\n    today = dd + \"-\" + mm + \"-\" + yyyy;\n    console.log(today);\n    today = mm + \"/\" + dd + \"/\" + yyyy;\n\n    apiHandler.editItem(itemId, { waterDate: today }).then((data) => {\n      apiHandler\n        .getPlants()\n        .then((apiResp) => {\n          console.log(apiResp);\n          const userPlants = apiResp.filter(\n            (plant) => plant.id_user === this.props.context.user._id\n          );\n          this.setState({\n            plants: userPlants,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    });\n  };\n\n  render() {\n    const { showForm } = this.state;\n    return (\n      <div className=\"myplantspage\">\n        {\" \"}\n        {/* <FormCreatePlant addItem={this.addItem} /> */}\n        <h1 className=\"myplantstitle\">My plants</h1>\n        <button className=\"addplantbtn\" onClick={() => this.showForm()}>\n          Add a new plant\n        </button>\n        {showForm && this.renderForm()}\n        <div className=\"plantcards\">\n          {this.state.plants.map((plant) => {\n            return (\n              <div className=\"plantcard\" key={plant._id}>\n                <div className=\"plantcardtop\">\n                  <p className=\"plantcardname\">{plant.name}</p>\n                  <div className=\"plantcardtopbtn\">\n                    \n\n                    <Link to={`/plant/edit/${plant._id}`}>\n                      <i className=\"fas fa-edit\"></i>\n                    </Link>\n                    <i\n                      onClick={() => {\n                        this.deleteItem(plant._id);\n                      }}\n                      className=\"fas fa-trash\"\n                    ></i>\n                  </div>\n                </div>\n\n                <img className=\"plantcardimage\" src={plant.image} />\n                <div className=\"plantcardallinfo\">\n                <p className=\"plantcardinfo\">\n                 <b>Enlightment</b>: {plant.enlightment}\n                </p>\n                <p className=\"plantcardinfo\"><b>Watering: </b>{plant.watering}</p>\n                <p className=\"plantcardinfo\">\n                <b> Water interval:</b> {plant.wateringinterval} days\n                </p>\n<br></br>\n                <p className=\"plantcardinfo\">\n                <b> Last watering:</b> {plant.waterDate}{\" \"}\n                </p>\n</div>\n                <button className=\"givemewater\"\n                  onClick={() => {\n                    this.waterDate(plant._id);\n                  }}\n                >\n                  Water me ! <i className=\"fas fa-hand-holding-water\"></i>\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default withUser(Myplants);\n","import React, { Component } from 'react'\n\nexport default class Greenclinic extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Green Clinic</h1>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { withUser } from \"../components/Auth/withUser\";\n\nconst ProtectedRoute = ({ component: Component, context, ...rest }) => {\n  if (context.isLoading) {\n    return null;\n  } else if (context.isLoggedIn) {\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\n  } else {\n    return <Redirect to=\"/signin\" />;\n  }\n};\n\nexport default withUser(ProtectedRoute);\n","\n\nimport React, { Component } from 'react'\nimport apiHandler from \"../api/apiHandler\";\n\n\n\n\nexport default class Comments extends Component {\n\n\nstate={\n    comments: []\n}\n\ncomponentDidMount() {\n\n    apiHandler.getComment()\n    .then((apiResp) => {\n        console.log(apiResp)\n        const commentsPost = apiResp.filter((comm) => comm.id_wall == this.props.postId)\n        this.setState({\n            comments: commentsPost\n        })\n    })\n}\n\ndisplayUserPostButtons = (comm) => {\n    \n    if (this.props.userEmail === comm.id_user.email) {\n      return (\n      \n      <div>\n   <i className=\"fas fa-trash\" onClick={() => {this.props.deleteComment(comm._id)}}></i>\n       \n      </div>)\n    }\n  }\n\n    render() {\n        return (\n            <div className=\"completecomment\">\n            \n                {this.state.comments.map((comment) => {\n                    return (\n                      <div className=\"commentpart\" key={comment._id}>\n                        <div  className=\"usercommenting\">\n                            <div className=\"ppusercontainercomment\">\n                            <img className=\"ppwall\" src={comment.id_user[\"profileImg\"]}/>\n                            </div>\n                         </div> \n                         <div className=\"commentinside\">  \n                         <div className=\"commetuser\">\n                        <p className=\"commentuserinfo\"><b>{comment.id_user[\"firstName\"]} {comment.id_user[\"lastName\"]}</b> </p>\n                        <p className=\"commenttext\">{comment.text}</p>\n                        <p className=\"commentuserinfo\">{comment.created_at.slice(0,10)} </p>\n                        </div>\n                        <div className=\"commentbtndelete\">\n                        {this.displayUserPostButtons(comment)}\n                        </div>\n                        </div>\n                       \n                        \n                        \n                   \n                    </div>\n                    \n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { withRouter } from \"react-router-dom\";\nimport { buildFormData } from \"../../utils\";\n\nclass FormComment extends Component {\n  state = {\n    text: \"\",\n    id_wall: this.props.postId\n  };\n\n  handleChange = (event) => {\n    const key = event.target.name;\n    const value = event.target.value;\n\n    console.log(\"--------\" + key, value);\n\n    this.setState({ text: value });\n    console.log(this.state);\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const commentData = this.state;\n    apiHandler.addComment(commentData)\n    .then((data) => {\n      this.props.addCommentUpdate(data);\n      this.setState({\n        text: \"\"\n      })\n    })\n    console.log(\"wowowow\")\n  };\n\n  render() {\n    return (\n      <div className=\"commentForm\">\n     <div className=\"ppusercontainercomment \"><img src={this.props.userpic} className=\"ppwall \"/></div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"comment\"></label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            placeholder=\"Comment this\"\n            id=\"comment\"\n            name=\"text\"\n            value={this.state.text}\n          ></input>\n          <button className=\"commentsubbtn\"><i className=\"fas fa-location-arrow\"></i></button>\n        </form>\n        \n      </div>\n    );\n  }\n}\n\nexport default withRouter(FormComment);\n","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\nimport { withUser } from \"../components/Auth/withUser\";\nimport Comments from \"../components/Comments\";\nimport FormComment from \"../components/Forms/FormComment\";\nimport { Link } from \"react-router-dom\";\n\nclass Profile extends Component {\n  state = {\n    plants: [],\n    posts: [],\n    comments: [],\n  };\n\n  componentDidMount() {\n    apiHandler\n      .getPlants()\n      .then((apiResp) => {\n        console.log(apiResp);\n        const userPlants = apiResp.filter(\n          (plant) => plant.id_user === this.props.context.user._id\n        );\n        this.setState({\n          plants: userPlants,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    apiHandler\n      .getWall()\n      .then((apiRes) => {\n        console.log(apiRes);\n        const userPost = apiRes.filter(\n          (post) => post.id_user._id === this.props.context.user._id\n        );\n        console.log();\n        this.setState({\n          posts: userPost,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    apiHandler.getComment().then((apiResp) => {\n      console.log(apiResp);\n      const commentsPost = apiResp.filter(\n        (comm) => comm.id_wall[\"_id\"] === this.state.posts.postId_id\n      );\n      this.setState({\n        comments: commentsPost,\n      });\n    });\n  }\n\n  deleteItem = (itemId) => {\n    apiHandler.deleteWall(itemId).then(() => {\n      this.setState({\n        posts: this.state.posts.filter((it) => it._id !== itemId),\n      });\n    });\n  };\n\n  addCommentUpdate = (comment) => {\n    apiHandler.getComment().then((apiResp) => {\n      console.log(apiResp);\n      const commentsPost = apiResp.filter(\n        (comm) => comm.id_wall[\"_id\"] === this.state.posts.postId_id\n      );\n      this.setState({\n        comments: comment,\n      });\n    });\n  };\n\n  deleteComment = (commentId) => {\n    apiHandler.deleteComment(commentId).then(() => {\n      this.setState({\n        comments: \"this.state.posts.filter((it) => it._id == commentId)\",\n      });\n    });\n  };\n\n  render() {\n    return (<div className=\"fullbodyprofile\">\n      <h1 className=\"userpagetitle\">My profile</h1>\n<div className=\"flexuserpageprofile\">\n\n   \n        <div className=\"userplantspartleft\">\n        <h1 className=\"userpageplantstitle\" >My plants</h1>\n\n        <div className=\"usersplants\">\n        {this.state.plants.map((plant) => {\n        return (\n          <div key={plant._id} className=\"userplantsbody\">\n            <div className=\"userplantscontainer\" key={plant._id}>\n              <p className=\"userplantname\">{plant.name}</p>\n              <img className=\"userplantimage\" src={plant.image} />\n            </div>\n          </div>\n          );\n        })}\n</div>\n</div>\n<div className=\"userplantspartright\">\n        <h1 className=\"userpageplantstitle\"> My Posts</h1>\n        {this.state.posts.map((post) => {\n          return (\n            <div className=\"wallbody\" key={post._id}>\n              <div className=\"wallpostcontainer\">\n                <div className=\"profiletoppost\">\n                  <h3 className=\"posttitleprofile\">{post.title}</h3>\n                  <div className=\"posttop\">\n                    <i\n                      className=\"fas fa-trash\"\n                      onClick={() => {\n                        this.deleteItem(post._id);\n                      }}\n                    ></i>\n                        <Link to={`/wall/edit/${post._id}`}>\n            <i className=\"fas fa-edit\"></i>\n          </Link>\n                  </div>\n                </div>\n                <img className=\"wallpic\" src={post.image} />\n                <h5 className=\"postsubtitle\">{post.subtitle}</h5>\n                <hr></hr>\n                <FormComment\n                  userpic={this.props.context.user.profileImg}\n                  addCommentUpdate={this.addCommentUpdate}\n                  postId={post._id}\n                />\n                <Comments\n                  key={this.state.comments._id}\n                  postId={post._id}\n                  userCommenting={this.props.context.user.firstName}\n                  deleteComment={this.deleteComment}\n                  userEmail={this.props.context.user.email}\n                />\n              </div>\n            </div>\n            \n          );\n        })}\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default withUser(Profile);\n","import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { withRouter } from \"react-router-dom\";\nimport { buildFormData } from \"../../utils\";\nimport UploadWidget from \"../UploadWidget\";\n\nclass FormCreateWall extends Component {\n\n  state = {\n    title: \"\",\n    author: \"\",\n    subtitle: \"\",\n    comments: \"\",\n    picture: null,\n    httpResponse: null,\n    error: null,\n \n  };\n\n\n  handleChange = (event) => {\n    const key = event.target.name;\n    const value =\n      event.target.type === \"file\" ? event.target.files[0] : event.target.value;\n\n    console.log(key, value);\n    this.setState({ [key]: value });\n  };\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const fd = new FormData();\n    const { httpResponse, ...data } = this.state;\n    buildFormData(fd, data);  \n\n    apiHandler\n    .createWall(fd)\n    .then((data) => {\n      console.log(data[\"id_user\"].firstName)\n        this.props.addItem(data);\n      this.setState({\n        title: \"\",\n        subtitle: \"\",\n        image: \"\",\n        comments: \"\",\n               \n        httpResponse: {\n          status: \"success\",\n          message: \"Item successfully added.\",\n        },\n        \n\n      })\n   \n      this.timeoutId = setTimeout(() => {\n        this.setState({ httpResponse: null });\n      }, 1000);\n    })\n    .catch((error) => {\n        console.log(error)\n      this.setState({\n        httpResponse: {\n          status: \"failure\",\n          message: \"An error occured, try again later.\",\n        },\n      });\n      this.timeoutId = setTimeout(() => {\n        this.setState({ httpResponse: null });\n      }, 1000);\n    });\n};\n\n\n  render() {\n    return (\n      <div className=\"wallForm\">\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n      \n          <div className=\"form-group\">\n            <label className=\"labelwall\" htmlFor=\"title\">\n              Title\n            </label>\n            <input\n              id=\"title\"\n              name=\"title\"\n              className=\"inputwall\"\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.title}\n            />\n          </div>\n\n\n          <div className=\"form-group\">\n            <label className=\"labelwall\" htmlFor=\"description\">\n              Subtitle\n            </label>\n            <input\n              id=\"subtitle\"\n              name=\"subtitle\"\n              className=\"inputwall\"\n              placeholder=\"Tell us something about this plant\"\n              onChange={this.handleChange}\n              value={this.state.subtitle}\n            ></input>\n          </div>\n\n          <div>\n            <input\n            id=\"file\"\n            className=\"inputfile\"\n              type=\"file\"\n              name=\"image\"\n              onChange={this.handleChange}\n              value={this.props.picture}\n            ></input>\n            <label htmlFor=\"file\">Choose a file</label>\n          </div>\n\n\n          <button className=\"btn-submit-plant\">Post on the wall !</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FormCreateWall);\n","import React from \"react\";\nimport \"../styles/UploadWidget.css\"\n\n// https://reactjs.org/docs/forwarding-refs.html\n\nconst UploadWidget = React.forwardRef((props, ref) => {\n  // In this component we foward the ref of the input type file in order to deal with it in the parent component.\n\n  const handleFileSelect = (event) => {\n    // This feature allows us to create a \"fake URL\" of the file that the user wants to upload\n    // In order to display the output to the user.\n    // See <FormProfile /> or <ItemForm />\n    const file = event.target.files[0];\n    const tempURL = URL.createObjectURL(file);\n    props.onFileSelect && props.onFileSelect(tempURL);\n    // ^------------------------ You can use guard operators in your normal javascript too !\n    // This means that the prop onFileSelect isn't mandatory in order to use this component.\n  };\n\n  return (\n    <React.Fragment>\n      <label className=\"UploadWidget label\" htmlFor={props.name}>\n        {props.children}\n      </label>\n      <input\n        onChange={handleFileSelect}\n        ref={ref}\n        className=\"UploadWidget input\"\n        id={props.name}\n        name={props.name}\n        type=\"file\"\n      />\n    </React.Fragment>\n  );\n});\n\nexport default UploadWidget;\n\n// class UploadWidget extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleFile = this.handleFile.bind(this);\n//   }\n\n//   handleFile(event) {\n//     event.stopPropagation();\n//     const tmpUrl = URL.createObjectURL(event.target.files[0]);\n//     const file = event.target.files[0];\n//     this.props.onFileSelect({ tmpUrl, file });\n//   }\n\n//   getTempUrl() {}\n\n//   // componentDidUpdate(prevProps, prevState) {\n//   //   if (prevProps === this.props) {\n//   //     return;\n//   //   }\n//   // }\n\n//   render() {\n//     const { name } = this.props;\n\n//     return (\n//       <React.Fragment>\n//         <label\n//           onClick={this.focusInput}\n//           className=\"UploadWidget label\"\n//           htmlFor={name}\n//         >\n//           {this.props.children}\n//         </label>\n//         <input\n//           // onChange={this.handleFile}\n//           className=\"UploadWidget input\"\n//           id={name}\n//           type=\"file\"\n//           name={name}\n//         />\n//       </React.Fragment>\n//     );\n//   }\n// }\n","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Users extends Component {\n  state = {\n    users: [],\n    plants: [],\n    foundUsers: [],\n    sortValue: \"\",\n    inputValue: \"\",\n    \n\n  };\n\n  componentDidMount() {\n    apiHandler.getUsers().then((apiResp) => {\n        const filteredUser = apiResp.filter(user => {\n            return (\n                user.firstName.toLowerCase().includes(this.state.inputValue.toLowerCase()))})\n                \n     console.log(this.state.inputValue)\n      this.setState({\n        users: filteredUser,\n      });\n    });\n\n  }\n\n  userFilterOnChange = (event) => {\n      this.setState({\n          inputValue: event.target.value\n      })\n  }\n\n\n  submitSearch = (event) => {\n      event.preventDefault();\n    apiHandler.getUsers().then((apiResp) => {\n        const filteredUser = apiResp.filter(user => {\n            return (user.firstName.toLowerCase().includes(this.state.inputValue.toLowerCase()))})\n     console.log(this.state.inputValue)\n      this.setState({\n        users: filteredUser,\n        inputValue: \"\"\n      });\n    });\n\n  }\n\n\n  render() {\n\n\n    return (<div className=\"fulluserpagebody\">\n        <h1 className=\"myplantstitle\">Users list</h1>\n\n<form className=\"searchform\" onSubmit={this.submitSearch}>\n          <label className=\"labelplant\" htmlFor=\"search\">Search by name</label>\n          <input className=\"inputplant\" type=\"text\" value={this.state.inputValue} onChange={this.userFilterOnChange}/>\n          </form>\n      <div className=\"userpagebody\">\n\n\n          <div className=\"allusercontainer\">\n        {this.state.users.map((user) => {\n          return (\n              <div key={user._id}>\n            <div className=\"usercontainer\" key={user._id}>\n                <div className=\"ppusercontainer\">\n              <img className=\"ppwall\" src={user.profileImg} />\n             </div>\n              <p>  <Link to={`/users/${user._id}`}> <b>\n              {user.firstName} {user.lastName} </b>\n                    </Link></p>\n          \n        \n            </div>\n            <hr className=\"hruser\"></hr>\n            </div>\n          );\n        })}\n        \n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FormCreateWall from \"../components/Forms/FormCreateWall\";\nimport FormComment from \"../components/Forms/FormComment\";\nimport Comments from \"../components/Comments\";\nimport apiHandler from \"../api/apiHandler\";\nimport { Link } from \"react-router-dom\";\nimport { withUser } from \"../components/Auth/withUser\";\nimport UserContext from \"../components/Auth/UserContext\";\nimport Users from \"../pages/Users\";\n\nclass Wall extends Component {\n  state = {\n    wall: [],\n    comments: [],\n    showForm: true,\n  };\n\n  sortByKey(array, key) {\n    return array.sort(function (a, b) {\n      var x = a[key];\n      var y = b[key];\n      return x < y ? 1 : x > y ? -1 : 0;\n    });\n  }\n\n  componentDidMount() {\n    apiHandler\n      .getWall()\n      .then((apiResp) => {\n        console.log(apiResp);\n        this.sortByKey(apiResp, \"created_at\");\n\n        this.setState({\n          wall: apiResp,\n          currentUser: this.props.context.user.firstName,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteComment = (commentId) => {\n    apiHandler.deleteComment(commentId).then(() => {\n      this.setState({\n        comments: this.state.wall.filter((it) => it._id == commentId),\n      });\n    });\n  };\n\n  addItem = (plant) => {\n    apiHandler\n      .getWall()\n      .then((apiResp) => {\n        console.log(apiResp);\n        this.sortByKey(apiResp, \"created_at\");\n\n        this.setState({\n          wall: apiResp,\n          currentUser: this.props.context.user.firstName,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    this.setState({\n      wall: [plant, ...this.state.wall],\n    });\n  };\n\n  addCommentUpdate = (comment) => {\n    apiHandler.getComment().then((apiResp) => {\n      console.log(apiResp);\n      const commentsPost = apiResp.filter(\n        (comm) => comm.id_wall[\"_id\"] === this.state.wall.postId_id\n      );\n      this.setState({\n        comments: comment,\n      });\n    });\n  };\n\n  displayUserPost = (post) => {\n    if (this.props.context.user.email === post.id_user.email) {\n      return (\n        <div className=\"posttopuser\">\n          <div className=\"wallpostuser\">\n            <div className=\"ppusercontainer\">\n              <img className=\"ppwall\" src={post.id_user[\"profileImg\"]} />\n            </div>\n\n            <div className=\"posttopuserinfo\">\n              <p>\n                <Link to={\"/profile\"}>\n                  {\" \"}\n                  <b>Me</b>{\" \"}\n                </Link>{\" \"}\n              </p>\n\n              <div className=\"postdate\">{post.created_at.slice(0, 10)} </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"posttopuser\">\n          <div className=\"wallpostuser\">\n            <div className=\"ppusercontainer\">\n              <img className=\"ppwall\" src={post.id_user[\"profileImg\"]} />\n            </div>\n\n            <div className=\"posttopuserinfo\">\n              <p>\n                <Link to={`/users/${post.id_user._id}`}>\n                  <b>\n                    {post.id_user[\"firstName\"]} {post.id_user[\"lastName\"]}\n                  </b>\n                </Link>\n              </p>\n\n              <div className=\"postdate\">{post.created_at.slice(0, 10)} </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  displayUserPostButtons = (post) => {\n    if (this.props.context.user.email === post.id_user.email) {\n      return (\n        <div className=\"posttopbtns\">\n          <Link to={`/wall/edit/${post._id}`}>\n            <i className=\"fas fa-edit\"></i>\n          </Link>\n          <i\n            className=\"fas fa-trash\"\n            onClick={() => {\n              this.deleteItem(post._id);\n            }}\n          ></i>\n        </div>\n      );\n    }\n  };\n\n  deleteItem = (itemId) => {\n    apiHandler.deleteWall(itemId).then(() => {\n      this.setState({\n        wall: this.state.wall.filter((it) => it._id !== itemId),\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"wallFullPage\">\n        <div className=\"wallpage\">\n          <div className=\"fullbodywall\">\n            {/* <FormCreateWall addItem={this.addItem} /> */}\n\n            <h1 className=\"walltitle\"> Main Wall</h1>\n\n            <FormCreateWall addItem={this.addItem} />\n            <div className=\"wallPost\">\n              {this.state.wall.map((post) => {\n                return (\n                  <div className=\"wallbody\" key={post._id}>\n                    <div className=\"wallpostcontainer\">\n                      <div className=\"posttop\">\n                        {this.displayUserPost(post)}\n                        {this.displayUserPostButtons(post)}\n                      </div>\n                      <hr></hr>\n                      <h3 className=\"posttitle\">{post.title}</h3>\n\n                      <img className=\"wallpic\" src={post.image} />\n                      <h5 className=\"postsubtitle\">{post.subtitle}</h5>\n                      <hr></hr>\n                      <FormComment\n                        userpic={this.props.context.user.profileImg}\n                        addCommentUpdate={this.addCommentUpdate}\n                        postId={post._id}\n                      />\n                      <Comments\n                        key={this.state.comments._id}\n                        postId={post._id}\n                        userCommenting={this.props.context.user.firstName}\n                        deleteComment={this.deleteComment}\n                        userEmail={this.props.context.user.email}\n                      />\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"userswallpageee\">\n            <Users />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withUser(Wall);\n","import React, { Component } from 'react'\n\nexport default class Exchangemap extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Exchange Map</h1>\n                <h2>In construction </h2>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { withRouter } from \"react-router-dom\";\nimport { buildFormData } from \"../../utils\";\nimport UploadWidget from \"../UploadWidget\";\n\n\nrequire(\"dotenv\").config();\n// import mapboxgl from \"mapbox-gl\";\n// mapboxgl.accessToken = \"MAPBOX_ACCESS_TOKEN\";\n\nclass FormEditPlant extends Component {\n \n  state = {\n    httpResponse: null,\n      };\n\n  formRef = React.createRef();\n\n  componentDidMount() {\n    apiHandler\n      .getPlants()\n      .then((apiResp) => {\n        const plantToEdit = apiResp.filter(\n          (plant) => plant._id === this.props.match.params.id\n        );\n        this.setState({\n          name: plantToEdit[0].name,\n          description: plantToEdit[0].description,\n         \n          id: plantToEdit[0]._id,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleChange = (event) => {\n    const key = event.target.name;\n    const value =\n      event.target.type === \"file\" ? event.target.files[0] : event.target.value;\n\n    console.log(key, value);\n    this.setState({ [key]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const fd = new FormData();\n    const { httpResponse, ...data } = this.state;\n    buildFormData(fd, data);\n\n    apiHandler\n      .editItem(this.state.id, fd)\n      .then((data) => {\n        this.props.history.push(\"/myplants\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  handleFileSelect = ({ tmpUrl, file }) => {\n    this.setState({ image: file });\n  };\n\n  render() {\n    return (\n      <div className=\"ItemForm-container\">\n        <form className=\"formEditplant\" onSubmit={this.handleSubmit}>\n          <h2 className=\"myplantstitle\">Edit this Plant</h2>\n\n          <div className=\"form-group\">\n            <label className=\"labelplant\" htmlFor=\"name\">\n              Name\n            </label>\n            <input\n              id=\"name\"\n              name=\"name\"\n              className=\"inputplant\"\n              type=\"text\"\n              onChange={this.handleChange}\n              defaultValue={this.state.name}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"labelplant\" htmlFor=\"enlightment\">\n              Enlightment\n            </label>\n            <select className=\"selectplant\"\n              name=\"enlightment\"\n              onChange={this.handleChange}\n              defaultValue={this.state.enlightment}\n            >\n              <option value=\"\">Choose an option</option>\n              <option value=\"Direct sun\">Direct sun</option>\n              <option value=\"Bright light\">Bright light</option>\n              <option value=\"Filtered light\">Filtered light</option>\n              <option value=\"Shade\">Shade</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"labelplant\" htmlFor=\"watering\">\n              Watering level\n            </label>\n            <select className=\"selectplant\"\n              name=\"watering\"\n              onChange={this.handleChange}\n              defaultValue={this.state.watering}\n            >\n              <option value=\"\">Choose an option</option>\n              <option value=\"Heavy\">Heavy</option>\n              <option value=\"Medium\">Medium</option>\n              <option value=\"Low\">Low</option>\n            </select>\n          </div>\n\n\n          <div className=\"form-group\">\n            <label className=\"labelplant\" htmlFor=\"wateringinterval\">\n              Water interval\n            </label>\n            <input\n            className=\"inputplant\"\n              id=\"wateringinterval\"\n              name=\"wateringinterval\"\n              type=\"number\"\n              onChange={this.handleChange}\n              value={this.state.wateringinterval}\n            />\n          </div>\n\n\n          <div>\n            <input\n            className=\"inputfile\"\n              type=\"file\"\n              name=\"image\"\n              onChange={this.handleChange}\n              id=\"image\"\n          \n            ></input>\n            <label for=\"image\">Choose a file</label>\n          </div>\n\n          <button className=\"btn-submit-plant\">Save Changes</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FormEditPlant);\n","import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { withRouter } from \"react-router-dom\";\nimport { buildFormData } from \"../../utils\";\nimport UploadWidget from \"../UploadWidget\";\n\n\nclass FormEditWall extends Component {\n\n    state = {\n      title: \"\",\n      subtitle: \"\",\n      httpResponse: null,\n       };\n  \n    formRef = React.createRef();\n  \n    componentDidMount() {\n      apiHandler\n        .getWall()\n        .then((apiResp) => {\n          console.log(apiResp)\n          const postToEdit = apiResp.filter(\n            (post) => post._id === this.props.match.params.id\n            \n          );\n          console.log(postToEdit)\n          this.setState({\n            title: postToEdit[0].title,\n            subtitle: postToEdit[0].subtitle,\n           \n            id: postToEdit[0]._id,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  \n    handleChange = (event) => {\n      const key = event.target.name;\n      const value =\n        event.target.type === \"file\" ? event.target.files[0] : event.target.value;\n  \n      console.log(key, value);\n      this.setState({ [key]: value });\n    };\n  \n    handleSubmit = (event) => {\n      event.preventDefault();\n      const fd = new FormData();\n      const { httpResponse, ...data } = this.state;\n      buildFormData(fd, data);\n  \n      apiHandler\n        .editWall(this.state.id, fd)\n        .then((data) => {\n          this.props.history.push(\"/wall\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n  \n    // handleFileSelect = ({ tmpUrl, file }) => {\n    //   this.setState({ image: file });\n    // };\n  \n    render() {\n      return (\n        <div className=\"ItemForm-container\">\n          <form className=\"form\" onSubmit={this.handleSubmit}>\n            <h2 className=\"myplantstitle\">Edit this Post</h2>\n  \n            <div className=\"form-group\">\n              <label className=\"labelplant\" htmlFor=\"name\">\n                Title\n              </label>\n              <input\n                id=\"title\"\n                name=\"title\"\n                className=\"inputplant\"\n                placeholder=\"Post title\"\n                type=\"text\"\n                onChange={this.handleChange}\n                defaultValue={this.state.title}\n              />\n            </div>\n  \n            <div className=\"form-group\">\n              <label className=\"labelplant\" htmlFor=\"description\">\n                Subtitle\n              </label>\n              <input\n                id=\"subtitle\"\n                name=\"subtitle\"\n                type=\"text\"\n                className=\"inputplant\"\n                placeholder=\"About this picture\"\n                onChange={this.handleChange}\n                defaultValue={this.state.subtitle}\n              ></input>\n            </div>\n  \n            <div>\n            <input\n            className=\"fileplant\"\n              type=\"file\"\n              name=\"image\"\n              onChange={this.handleChange}\n          \n            ></input>\n          </div>\n  \n            <button className=\"btn-submit\">Save Changes</button>\n          </form>\n        </div>\n      );\n    }\n  }\n  \n  export default withRouter(FormEditWall);","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\nimport { withRouter } from \"react-router-dom\";\nimport { buildFormData } from \"../utils\";\n\n\nclass FormCreatePlant extends Component {\n  state = {\n    name: \"\",\n    description: \"\",\n    image:null,\n    enlightment: \"\",\n    watering: \"\",\n    growingperiod: \"\",\n    httpResponse: null,\n    error: null,\n  };\n\n\n  handleChange = (event) => {\n    const key = event.target.name;\n    const value =\n      event.target.type === \"file\" ? event.target.files[0] : event.target.value;\n\n    console.log(key, value);\n    this.setState({ [key]: value });\n  };\n\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const fd = new FormData();\n    const { httpResponse, ...data } = this.state;\n    buildFormData(fd, data); // You can find this function in ./src/utils.js\n    // Function implemented by user \"Vladi Vlad\" @stackoverflow : ) => https://stackoverflow.com/a/42241875/13374041\n\n    apiHandler\n    .createDbPlant(fd)\n    .then((data) => {\n        this.props.addItem(data);\n      this.setState({\n        name: \"\",\n        description: \"\",\n        enlightment: \"\",\n        watering:\"\",\n        waterdays: 0,\n        mintemp: 0,\n        maxtemp:0,\n        growingperiod:\"\",\n        image: null,\n        httpResponse: {\n          status: \"success\",\n          message: \"Item successfully added.\",\n        },\n        \n\n      });\n      this.timeoutId = setTimeout(() => {\n        this.setState({ httpResponse: null });\n      }, 1000);\n    })\n    .catch((error) => {\n        console.log(error)\n      this.setState({\n        httpResponse: {\n          status: \"failure\",\n          message: \"An error occured, try again later.\",\n        },\n      });\n      this.timeoutId = setTimeout(() => {\n        this.setState({ httpResponse: null });\n      }, 1000);\n    });\n};\n\n\n  render() {\n    return (\n      <div className=\"ItemForm-container\">\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <h2 className=\"title\">Add a new Plant</h2>\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"name\">\n              Name\n            </label>\n            <input\n              id=\"name\"\n              name=\"name\"\n              className=\"input\"\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </div>\n\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"description\">\n              Description\n            </label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              className=\"text-area\"\n              placeholder=\"Tell us something about this plant\"\n              onChange={this.handleChange}\n              value={this.state.description}\n            ></textarea>\n          </div>\n\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"enlightment\">\n              enlightment\n            </label>\n          <select name=\"enlightment\" onChange={this.handleChange}\n              value={this.state.enlightment}>\n          <option value=\"\">--Please choose an option--</option>\n    <option value=\"Direct sun\">Direct sun</option>\n    <option value=\"Bright light\">Bright light</option>\n    <option value=\"Filtered light\">Filtered light</option>\n    <option value=\"Shade\">Shade</option>\n          </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"watering\">\n              watering\n            </label>\n          <select name=\"watering\" onChange={this.handleChange}\n              value={this.state.watering}>\n          <option value=\"\">--Please choose an option--</option>\n    <option value=\"Heavy\">Heavy</option>\n    <option value=\"Medium\">Medium</option>\n    <option value=\"Low\">Low</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"waterdays\">\n              Watering interval\n            </label>\n            <input\n              id=\"waterdays\"\n              name=\"waterdays\"\n              \n              type=\"number\"\n              onChange={this.handleChange}\n              value={this.state.waterdays}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"mintemp\">\n              Minimum temp\n            </label>\n            <input\n              id=\"mintemp\"\n              name=\"mintemp\"\n              \n              type=\"number\"\n              onChange={this.handleChange}\n              value={this.state.mintemp}\n            />\n          </div>\n\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"mintemp\">\n              Maximum temp\n            </label>\n            <input\n              id=\"maxtemp\"\n              name=\"maxtemp\"\n              \n              type=\"number\"\n              onChange={this.handleChange}\n              value={this.state.maxtemp}\n            />\n          </div>\n\n          \n\n\n          <div>\n            <input type=\"file\"  name=\"image\" onChange={this.handleChange} value={this.props.image}>\n            </input>\n          </div>\n\n          <button className=\"btn-submit\">Add Item</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FormCreatePlant);","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\nimport Comments from \"../components/Comments\";\nimport FormComment from \"../components/Forms/FormComment\";\nimport { withUser } from \"../components/Auth/withUser\";\n\nclass OneUser extends Component {\n  state = {\n    user: [],\n    plant: [],\n    wall: [],\n    comments: [],\n  };\n\n  sortByKey(array, key) {\n    return array.sort(function (a, b) {\n      var x = a[key];\n      var y = b[key];\n      return x < y ? 1 : x > y ? -1 : 0;\n    });\n  }\n\n\n  componentDidMount() {\n    apiHandler.getUsers().then((apiResp) => {\n      console.log(apiResp);\n      const userInfo = apiResp.filter(\n        (user) => user._id === this.props.match.params.id\n      );\n      this.setState({\n        user: userInfo,\n      });\n    });\n\n    apiHandler.getPlants().then((apiResp) => {\n      const userPlants = apiResp.filter(\n        (userplant) => userplant.id_user === this.props.match.params.id\n      );\n      \n      this.setState({\n        plant: userPlants,\n      });\n    });\n\n    apiHandler.getWall().then((apiResp) => {\n      this.sortByKey(apiResp, \"created_at\");\n      const userPosts = apiResp.filter(\n        (userPost) => userPost.id_user._id === this.props.match.params.id\n      );\n      this.setState({\n        wall: userPosts,\n      });\n    });\n\n    apiHandler.getComment().then((apiResp) => {\n      console.log(apiResp);\n      const commentsPost = apiResp.filter(\n        (comm) => comm.id_wall[\"_id\"] === this.state.wall.postId_id\n      );\n      this.setState({\n        comments: commentsPost,\n      });\n    });\n  }\n\n  addCommentUpdate = (comment) => {\n    apiHandler.getComment().then((apiResp) => {\n      console.log(apiResp);\n      const commentsPost = apiResp.filter(\n        (comm) => comm.id_wall._id === this.state.wall.postId_id\n      );\n      this.setState({\n        comments: comment,\n      });\n    });\n  };\n\n  deleteComment = (commentId) => {\n    apiHandler.deleteComment(commentId).then(() => {\n      this.setState({\n        comments: \"this.state.posts.filter((it) => it._id == commentId)\",\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"oneuserbody\">\n  \n        {this.state.user.map((user) => {\n            \n          return (\n          <div className=\"usernameppfu\">\n          <div className=\"ppusercontainer2\"><img className=\"ppwall\" src={user.profileImg}/></div>\n          <h1 key={user._id} className=\"userpagetitle\">\n            {user.firstName} profile page</h1>\n            </div>\n          )\n        })}\n\n\n<div className=\"flexuserpage\">\n\n<div className=\"userplantspartleft\">\n<h1 className=\"userpageplantstitle\">User plants</h1>\n\n<div className=\"usersplants\">\n        {this.state.plant.map((plant) => {\n        return (\n          <div key={plant._id} className=\"userplantsbody\">\n            <div className=\"userplantscontainer\" key={plant._id}>\n              <p className=\"userplantname\">{plant.name}</p>\n              <img className=\"userplantimage\" src={plant.image} />\n            </div>\n          </div>\n          );\n        })}\n</div>\n</div>\n<div className=\"userplantspartright\">\n<h1 className=\"userpageplantstitle\">User Posts</h1>\n        {this.state.wall.map((post) => {\n\n              return (\n            <div className=\"wallbody\" key={post._id}>\n            <div className=\"wallpostcontainer\">\n              <div className=\"profiletoppost\">\n                <h3 className=\"posttitleprofile\">{post.title}</h3>\n                <div className=\"posttop\">\n           \n                </div>\n              </div>\n              <img className=\"wallpic\" src={post.image} />\n              <h5 className=\"postsubtitle\">{post.subtitle}</h5>\n              <hr></hr>\n              <FormComment\n                userpic={this.props.context.user.profileImg}\n                addCommentUpdate={this.addCommentUpdate}\n                postId={post._id}\n              />\n              <Comments\n                key={this.state.comments._id}\n                postId={post._id}\n                userCommenting={this.props.context.user.firstName}\n                deleteComment={this.deleteComment}\n                userEmail={this.props.context.user.email}\n              />\n            </div>\n          </div>\n        );\n        })}\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default withUser(OneUser);","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\nimport { Link } from \"react-router-dom\";\n\nexport default class UserPage extends Component {\n  state = {\n    users: [],\n    plants: [],\n    foundUsers: [],\n    sortValue: \"\",\n    inputValue: \"\",\n    \n\n  };\n\n  componentDidMount() {\n    apiHandler.getUsers().then((apiResp) => {\n        const filteredUser = apiResp.filter(user => {\n            return (\n                user.firstName.toLowerCase().includes(this.state.inputValue.toLowerCase()))})\n                \n     console.log(this.state.inputValue)\n      this.setState({\n        users: filteredUser,\n      });\n    });\n\n  }\n\n  userFilterOnChange = (event) => {\n      this.setState({\n          inputValue: event.target.value\n      })\n  }\n\n\n  submitSearch = (event) => {\n      event.preventDefault();\n    apiHandler.getUsers().then((apiResp) => {\n        const filteredUser = apiResp.filter(user => {\n            return (user.firstName.toLowerCase().includes(this.state.inputValue.toLowerCase()))})\n     console.log(this.state.inputValue)\n      this.setState({\n        users: filteredUser,\n        inputValue: \"\"\n      });\n    });\n\n  }\n\n\n  render() {\n\n\n    return (<div className=\"fulluserpagebody\">\n        <h1 className=\"myplantstitle\">Users list</h1>\n\n<form className=\"searchformuserpage\" onSubmit={this.submitSearch}>\n          <label className=\"labelplant\" htmlFor=\"search\">Search by name</label>\n          <input className=\"inputplant\" type=\"text\" value={this.state.inputValue} onChange={this.userFilterOnChange}/>\n          </form>\n      <div className=\"userpagebodyuserpage\">\n\n\n          <div className=\"allusercontainerpage\">\n        {this.state.users.map((user) => {\n          return (\n              <div key={user._id}>\n            <div className=\"usercontainerpage\" key={user._id}>\n                <div className=\"ppusercontainer\">\n              <img className=\"ppwall\" src={user.profileImg} />\n             </div>\n              <p>  <Link to={`/users/${user._id}`}> <b>\n              {user.firstName} {user.lastName} </b>\n                    </Link></p>\n          \n        \n            </div>\n            <hr className=\"hruser\"></hr>\n            </div>\n          );\n        })}\n        \n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport NavMain from \"./components/NavMain\";\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\nimport Myplants from \"./pages/Myplants\";\nimport Greenclinic from \"./pages/Greenclinic\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Profile from \"./pages/Profile\";\nimport Wall from \"./pages/Wall\";\nimport Map from \"./pages/Exchangemap\";\nimport FormEditPlant from \"./components/Forms/FormEditPlant\";\nimport FormEditWall from \"./components/Forms/FormEditWall\";\nimport DbFormPlant from \"./pages/DbFormPlant\";\nimport Users from \"./pages/Users\";\nimport OneUser from \"./pages/OneUser\";\nimport UserPage from \"./pages/UserPage\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavMain />\n      <Switch>\n        <Route exact path=\"/\" component={Signin} />\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/wall\" component={Wall} />\n        <ProtectedRoute exact path=\"/myplants\" component={Myplants} />\n        <ProtectedRoute exact path=\"/profile\" component={Profile} />\n        <ProtectedRoute exact path=\"/greenclinic\" component={Greenclinic} />\n        <ProtectedRoute exact path=\"/map\" component={Map} />\n        <ProtectedRoute\n          exact\n          path=\"/plant/edit/:id\"\n          component={FormEditPlant}\n        />\n        <ProtectedRoute exact path=\"/wall/edit/:id\" component={FormEditWall} />\n        <Route exact path=\"/dbplantcreate\" component={DbFormPlant} />\n        <ProtectedRoute exact path=\"/users\" component={UserPage} />\n        <ProtectedRoute exact path=\"/users/:id\" component={OneUser} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport UserProvider from \"./components/Auth/UserProvider\";\nimport App from \"./App\";\n\nimport \"./styles/reset.css\";\nimport \"./styles/global.css\";\nimport \"./styles/homepage.css\";\nimport \"./styles/login.css\";\nimport \"./styles/signup.css\";\nimport \"./styles/myplants.css\";\nimport \"./styles/wall.css\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}